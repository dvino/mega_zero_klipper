[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[exclude_object]

# Print start gcode for Super/PrusaSlicer:
# PRINT_START EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] RETRACT=[retract_length[0]] Z_OFFSET=0 AREA_START={first_layer_print_min[0]},{first_layer_print_min[1]} AREA_END={first_layer_print_max[0]},{first_layer_print_max[1]}

# for Cura:
# PRINT_START EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0} RETRACT={retraction_amount} Z_OFFSET=0
# For bed mesh params see med_mesh.cfg

[gcode_macro PRINT_START]
variable_parameter_AREA_START: 0,0
variable_parameter_AREA_END: 0,0
gcode:
    {% if params.BED_TEMP %}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=bed_temp VALUE={ params.BED_TEMP|float }
    {% endif %}

    {% if params.EXTRUDER_TEMP %}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=extruder_temp VALUE={ params.EXTRUDER_TEMP|float }
    {% endif %}

    {% if params.RETRACT %}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=retract VALUE={ params.RETRACT|float }
    {% endif %}

    {% if params.ACCEL %}
        SET_VELOCITY_LIMIT ACCEL={ params.ACCEL|float }
    {% endif %}

    {% if params.ACCEL_TO_DECEL %}
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL={ params. ACCEL_TO_DECEL|float }
    {% endif %}

    {% if params.SQUARE_CORNER_VELOCITY %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ params. SQUARE_CORNER_VELOCITY|float }
    {% endif %}

    {% if params.AREA_START and params.AREA_END %}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=bed_mesh_aria_start_x VALUE={params.AREA_START.split(",")[0]|float}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=bed_mesh_aria_start_y VALUE={params.AREA_START.split(",")[1]|float}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=bed_mesh_aria_end_x VALUE={params.AREA_END.split(",")[0]|float}
        SET_GCODE_VARIABLE MACRO=_global_variables VARIABLE=bed_mesh_aria_end_y VALUE={params.AREA_END.split(",")[1]|float}
    {% endif %}

    _PRINT_START_I

[gcode_macro _PRINT_START_I]
gcode:
    {% set bed_temp = printer["gcode_macro _global_variables"].bed_temp|float %}
    
    G21                             # metric values
    M140 S{bed_temp}                # Start bed heating
    G90                             # Use absolute coordinates
    M82                             # absolute extrusion mode
    CLEAR_PAUSE
    M25                             # pause
    RESPOND MSG="Preparing print enviroment"

    M117 Heating bed
    SET_IDLE_TIMEOUT TIMEOUT=7200

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}

    {% if ('xyz' not in printer.toolhead.homed_axes) %}
        G28     # homing XY
    {% endif %}

    UPDATE_DELAYED_GCODE ID=_WAIT_BED_TEMPERATURE_I DURATION=0.1

[delayed_gcode _WAIT_BED_TEMPERATURE_I]
# wait until bed is partially heated
gcode:
	{% if printer.heater_bed.temperature < printer.heater_bed.target * 0.85 %}
        UPDATE_DELAYED_GCODE ID=_WAIT_BED_TEMPERATURE_I DURATION=5
	{% else %}
        _PRINT_START_II
	{% endif %}

[gcode_macro _PRINT_START_II]
gcode:
    # model fan the air duct is cooled so that it does not melt  from the bed
    {% if printer.heater_bed.target > 85 %}
        M106 S51
    {% endif %}

    M117 Heating
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer["gcode_macro _global_variables"].extruder_temp}
    UPDATE_DELAYED_GCODE ID=_WAIT_BED_TEMPERATURE_II DURATION=0.1

[delayed_gcode _WAIT_BED_TEMPERATURE_II]
gcode:
    # wait until bed is heated
	{% if printer.heater_bed.temperature < printer.heater_bed.target - 1 %}
        UPDATE_DELAYED_GCODE ID=_WAIT_BED_TEMPERATURE_II DURATION=5
	{% else %}
        _PRINT_START_III
	{% endif %}

[gcode_macro _PRINT_START_III]
gcode:
    {% set START_X = printer["gcode_macro _global_variables"].bed_mesh_aria_start_x %}
    {% set START_Y = printer["gcode_macro _global_variables"].bed_mesh_aria_start_y %}
    {% set END_X = printer["gcode_macro _global_variables"].bed_mesh_aria_end_x %}
    {% set END_Y = printer["gcode_macro _global_variables"].bed_mesh_aria_end_y %}
    
    {% if START_X != 0 and START_Y != 0 and END_X != 0 and END_y != 0 %}
        BED_MESH_CALIBRATE AREA_START={START_X},{START_Y} AREA_END={END_X},{END_Y}
        G0 X0 Y0 F10000
    {% else %}
        G28 Z
	{% endif %}
    
    UPDATE_DELAYED_GCODE ID=_WAIT_EXTRUDER_TEMPERATURE DURATION=0.1

[delayed_gcode _WAIT_EXTRUDER_TEMPERATURE]
gcode:
    # wait until extruder is heated
	{% if printer.extruder.temperature < printer.extruder.target - 1 %}
    	UPDATE_DELAYED_GCODE ID=_WAIT_EXTRUDER_TEMPERATURE DURATION=5
	{% else %}
        _PRINT_START_IV
	{% endif %}


[gcode_macro _PRINT_START_IV]
gcode:
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4 %}
    M106 S0                                 # model fan turn off

    PRIME_LINE Y=1

    G21                                     # set units to millimeters
    M83										# global axis, relative extruder
    M400                                    # Wait for current moves to finish
    M24                                     # removing from pause
    M117 Printing ...
    RESPOND MSG="Printinting started"
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=30

# PrusaSliser: PRIME_LINE F={first_layer_speed}
# Cura: PRIME_LINE F={speed_print_layer_0}
[gcode_macro PRIME_LINE]
gcode:
    {% set feedrate = params.F|default(50)|float * 60 %}
    {% set length = 100|float %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = 0.3 %}
    #{% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    # normal extruded width calculate: length * width * height / 1.6
    {% set extrude = length * width * height %}  
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    G90                                                                         # absolute positioning
    M117 Priming extruder
    {% if 'Y' in params %}
        {% set y_start = 1.0 %}
        {% set x_start = (printer.toolhead.axis_maximum.y|float - 100) / 5 %}
        
        G0 X{x_start} Y-1 F5000
        G0 Z0.1 F1500
        G92 E0                                                                  # reset extruder
        G1 E{E} F1500                                                           # prime
        G92 E0                                                                  # reset extruder
        G0 Z{height} F1500                                                      # move to start position
        G0 X{x_start} Y{y_start} F5000
        G91                                                                     # relative positioning
        G1 X{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G0 Y{width} F5000                                                       # move to the next line
        G1 X-{length - 10} E{extrude} F{feedrate}                               # draw the 2nd line
    {% else %}
        {% set y_start = (printer.toolhead.axis_maximum.x|float - 100) / 5 %}
        {% set x_start = 5.0 %}

        G0 X-1 Y{y_start} F5000
        G0 Z0.1 F1500
        G92 E0                                                                  # reset extruder
        G1 E{E} F1500                                                           # prime
        G92 E0 
        G0 Z{height} F1500                                                      # move to start position
        G0 X{x_start} Y{y_start} F5000
        G91                                                                     # relative positioning
        G1 E4 F{feedrate}                                                       # prime
        G1 Y{length} E{extrude} F{feedrate}                                          # draw the 1st line
        G0 X{width} F5000                                                       # move to the next line
        G1 Y-{length - 10} E{extrude} F{feedrate}                                         # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE
    G92 E0 ; Reset Extruder
    ;G1 E-1 F500 ; Retract filiment by 0.5 mm
    G1 Z0.3 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G90
    #G1 X20 Y20 Z0.3 F5000 ; Move over to prevent blob squish
    #G1 F50
    G92 E0 ; Reset Extruder

[gcode_macro PRINT_END]
gcode:
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4%}
    M117 Print copmpleate
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91                                                                         # relative positioning
    G1 E-{E} F1500                                                              # retract
    G0 X5 Y5 Z0.2 F5000                                                         # wipe
    G0 Z10 F1500                                                                # raise Z
    G90                                                                         # absolute positioning
    M117 Parking
    PARK
    M84                                                                         # turn off all motors
    M117 Print completed
    SET_IDLE_TIMEOUT TIMEOUT=600
    M300 S2500 P750                                                             # Play melody
    M300 S0 P300
    M300 S2500 P750
    M300 S0 P300
    M300 S3000 P2000
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=60


[gcode_macro PARK]
gcode:
    {% set x_park = params.X|default(0)|float %}
    {% set y_park = params.Y|default(205)|float %}
    {% set z_park = params.Z|default(200)|float + printer.toolhead.position.z|float %}
    {% set x_max = printer.toolhead.axis_maximum.x|float %}
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% if x_park > x_max %}
        {% set x_park = x_max %}
    {% endif %}
    {% if y_park > y_max %}
        {% set y_park = y_max %}
    {% endif %}
    {% if z_park > z_max %}
        {% set z_park = z_max %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK_STATE
    G91 
    G1 Z5
    G90                                                                         # absolute positioning
    G1 X{x_park} Y{y_park} F5000
    RESTORE_GCODE_STATE name=PARK_STATE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4%}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    PARK
    RESPOND PREFIX=tgnotify MSG="Paused"
    M117 Pause

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4%}
    G91
    G1 E{E} F1500                                                               # unretract
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set E = printer["gcode_macro _global_variables"].retract|float * 4%}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    {% if printer.extruder.can_extrude %}
        G91
        G1 E-{E} F1500                                                              # retract
        G90
    {% endif %}
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    {% if ('x' in printer.toolhead.homed_axes) and ('y' in printer.toolhead.homed_axes) and ('z' in printer.toolhead.homed_axes) %}
        PARK
    {% endif %}
    M84                                                                         # turn off all motors
    M117 Printing canceled
    RESPOND MSG="Printing canceled"
    SET_IDLE_TIMEOUT TIMEOUT=600